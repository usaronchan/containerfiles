name: Mirror

on:
  workflow_dispatch:
    inputs:
      # gitlab:
      #   description: "Push GitLab"
      #   type: boolean
      #   required: true
      #   default: false
      github:
        description: "Push GitHub?"
        type: boolean
        required: true
        default: false
      # quay:
      #   description: "Push quay.io?"
      #   type: boolean
      #   required: true
      #   default: false
  schedule:
    # 每月3号2:37分开始执行（北京时间+8）
    - cron: "37 2 3 * *"

jobs:
  build:
    if: >-
      github.event.inputs ||
      github.event.schedule
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Pull docker images
        run: |
          docker pull chanzz0/texlive
          docker pull chanzz0/nvim
          docker pull debian
          docker pull ubuntu
          docker pull archlinux
      # - name: Login to GitLab Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: registry.gitlab.com
      #     username: aaron-git
      #     password: ${{ secrets.GITLAB_TOKEN }}
      # - name: GitLab
      #   if: inputs.gitlab || github.event.schedule
      #   run: |
      #     gitlab_url="registry.gitlab.com"
      #     docker tag chanzz0/texlive $gitlab_url/us-git/docker/texlive
      #     docker push $gitlab_url/us-git/docker/texlive
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: GitHub
        if: inputs.github || github.event.schedule
        env:
          github_username: ${{ github.actor }}
        run: |
          github_url="ghcr.io"
          # TeXLive
          docker tag chanzz0/texlive $github_url/${github_username}/texlive:latest
          docker push $github_url/${github_username}/texlive:latest
          # Neovim
          docker tag chanzz0/nvim $github_url/${github_username}/nvim:latest
          docker push $github_url/${github_username}/nvim:latest
      # - name: Login to Red Hat Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: quay.io
      #     username: chanzz
      #     password: ${{ secrets.QUAY_TOKEN }}
      # - name: Quay.io
      #   if: inputs.quay || github.event.schedule
      #   run: |
      #     quay_url="quay.io"
      #     # TeXLive
      #     docker tag chanzz0/texlive $quay_url/chanzz/texlive:latest
      #     docker push $quay_url/chanzz/texlive:latest
      # - name: Login to cnb Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: docker.cnb.cool
      #     username: cnb
      #     password: ${{ secrets.CNB_TOKEN }}
      # - name: cnb
      #   if: inputs.cnb || github.event.schedule
      #   run: |
      #     cnb_url="docker.cnb.cool"
      #     # TeXLive
      #     docker tag chanzz0/texlive $cnb_url/cnb-docker/docker/texlive:latest
      #     docker push $cnb_url/cnb-docker/docker/texlive:latest
      #     # Debian
      #     docker tag debian $cnb_url/cnb-docker/docker/debian:latest
      #     docker push $cnb_url/cnb-docker/docker/debian:latest
      #     # Ubuntu
      #     docker tag ubuntu $cnb_url/cnb-docker/docker/ubuntu:latest
      #     docker push $cnb_url/cnb-docker/docker/ubuntu:latest
      #     # Arch Linux
      #     docker tag archlinux $cnb_url/cnb-docker/docker/archlinux:latest
      #     docker push $cnb_url/cnb-docker/docker/archlinux:latest

      # - name: Login to Coding Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: g-zekw7514-docker.pkg.coding.net
      #     username: ${{ secrets.CODING_USERNAME }}
      #     password: ${{ secrets.CODING_TOKEN }}
      # - name: Coding
      #   if: inputs.coding || github.event.schedule
      #   run: |
      #     coding_url="g-zekw7514-docker.pkg.coding.net"
      #     # Debian
      #     docker tag debian $coding_url/docker/backup/debian:latest
      #     docker push $coding_url/docker/backup/debian:latest